
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/Script/ContainerPrefabScript');
require('./assets/Script/GameSceneScript');
require('./assets/Script/LoadViewScript');
require('./assets/Script/PokerPrefabScript');
require('./assets/Script/ToolsScript');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/GameSceneScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '82bddpNDw9NMZSSqDnDP3Wd', 'GameSceneScript');
// Script/GameSceneScript.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
cc.Class({
  "extends": cc.Component,
  properties: {
    leftSeconds: {
      type: cc.integer,
      "default": 90
    },
    backgroundSong: {
      type: cc.AudioClip,
      "default": null
    },
    PauseButton: {
      type: cc.Button,
      "default": null
    },
    HelpButton: {
      type: cc.Button,
      "default": null
    },
    AudioButton: {
      type: cc.Button,
      "default": null
    },
    ReBackButton: {
      type: cc.Button,
      "default": null
    },
    TimeCountLabel: {
      type: cc.Button,
      "default": null
    },
    RoundLabel: {
      type: cc.Button,
      "default": null
    },
    ScoreLabel: {
      type: cc.Button,
      "default": null
    },
    PokerContainer: {
      type: cc.Prefab,
      "default": null
    },
    myPoker: {
      type: cc.Prefab,
      "default": null
    },
    PokerInstanceBackground: {
      type: cc.Sprite,
      "default": null
    },
    PokerStashView: {
      type: cc.Button,
      "default": null
    },
    CurrentPoker: {
      type: cc.Sprite,
      "default": null
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    cc.audioEngine.playMusic(this.backgroundSong, true);
    var size = cc.view.getFrameSize();
    cc.log(size.width, size.height);
    var windowSize = cc.view.getVisibleSize();
    cc.log(windowSize.width, windowSize.height);
    var halfWidth = windowSize.width / 2;
    var halfHeight = windowSize.height / 2;
    var pauseSize = this.PauseButton.node.getBoundingBox();
    this.PauseButton.node.setAnchorPoint(0, 0);
    this.PauseButton.node.setPosition(-halfWidth + 40, -halfHeight + 30);
    this.HelpButton.node.setAnchorPoint(0, 0);
    this.HelpButton.node.setPosition(-87 - 40, -halfHeight + 11 + 30);
    this.AudioButton.node.setAnchorPoint(0, 0);
    this.AudioButton.node.setPosition(40, -halfHeight + 11 + 30);
    this.ReBackButton.node.setAnchorPoint(0, 0);
    this.ReBackButton.node.setPosition(halfWidth - 40 - 110, -halfHeight + 30);
    this.TimeCountLabel.node.setAnchorPoint(1, 0);
    this.TimeCountLabel.node.setPosition(0 - 107, halfHeight - 90 - 50);
    var labelNode = this.TimeCountLabel.node.getChildByName("Background").getChildByName("Label");
    var label = labelNode.getComponent(cc.Label);
    label.string = this.leftSeconds;
    this.RoundLabel.node.setAnchorPoint(0.5, 0);
    this.RoundLabel.node.setPosition(0, halfHeight - 90 - 50);
    var bg = this.RoundLabel.node.getChildByName("Background");
    var firstR = bg.getChildByName("FirstRound"); // firstR.node.opacity = 0;
    // bg.getChildByName("FirstRound").node.hi = false;
    // cc.log(bg.getChildByName("FirstRound"));
    // this.RoundLabel.node.getChildByName("Background").node.getChildByName("FirstRound").active = false;
    // this.RoundLabel.node.getChildByName("Background").node.getChildByName("FirstRound").node.active = false;

    this.ScoreLabel.node.setAnchorPoint(0, 0);
    this.ScoreLabel.node.setPosition(107, halfHeight - 90 - 50);
    this.PokerInstanceBackground.node.setAnchorPoint(0.5, 0.5); // cc.log(this.PokerInstanceBackground.node.getContentSize().width,this.PokerInstanceBackground.node.getContentSize().height);
    // cc.log(this.PokerInstanceBackground.node.getBoundingBox().size.width,this.PokerInstanceBackground.node.getBoundingBox().size.height);

    this.PokerInstanceBackground.node.setPosition(-halfWidth + 130 + 20, -halfHeight + 93 + 160);
    this.CurrentPoker.node.setAnchorPoint(0, 0.5);
    this.CurrentPoker.node.setPosition(0, -halfHeight + 95 + 160);
    this.PokerStashView.node.setAnchorPoint(1, 1);
    this.PokerStashView.node.setPosition(halfWidth - 10, -halfHeight + 190 + 160);

    for (var i = 0; i < 4; i++) {
      var pre = cc.instantiate(this.PokerContainer);
      pre._name = "CJH";
      this.node.addChild(pre);
      pre.setAnchorPoint(0.5, 0.5);
      pre.setPosition(-halfWidth + 78 + 60 + 157 * i, 0);
    }

    var array = this.pokerRandom();

    for (var _i = 0; _i < 52; _i++) {
      var _pre = cc.instantiate(this.myPoker);

      _pre.PokerNumber = array[_i]; // cc.log("PokerInit"+pre.PokerNumber);
      // cc.log("dianshu"+pre.PokerNumber);

      _pre._name = "Poker_" + _i;
      this.node.addChild(_pre);
      _pre.getChildByName("FrontView").active = false;

      _pre.setAnchorPoint(0.5, 0.5);

      _pre.setPosition(0, 0 - 200);
    }

    for (var index = 0; index < this.node.childrenCount; index++) {// cc.log(this.node.children[index]);
    }
  },
  start: function start() {
    var Tools = cc.find('Canvas').getComponent('ToolsScript');
    var bg = this.RoundLabel.node.getChildByName("Background");
    bg.getChildByName("FirstRound").active = false;
    bg.getChildByName("SecondRound").active = false;
    bg.getChildByName("ThirdRound").active = false;
    this.fapai(0);

    var _this = this;

    cc.director.getScheduler().schedule(function () {
      var labelNode = this.TimeCountLabel.node.getChildByName("Background").getChildByName("Label");
      var label = labelNode.getComponent(cc.Label);
      var timeString = Tools.FormatMMSS(_this.leftSeconds);
      cc.log(timeString);
      label.string = timeString;
      _this.leftSeconds--; // cc.log(_this.leftSeconds)
    }, this, 1, 100, 1, false);
  },
  // 发牌函数
  fapai: function fapai(seq) {
    var _this = this;

    var size = cc.view.getVisibleSize();

    var lastPocker = _this.PokerInstanceBackground.node.getChildByName("Poker_" + (seq - 1));

    var currentPoker = _this.node.getChildByName("Poker_" + seq);

    if (currentPoker === null) {
      cc.log("Test", lastPocker, currentPoker);

      _this.fanzhuan(lastPocker);

      return;
    } // 回调


    var end_func = cc.callFunc(function (target) {
      var base_count = parseInt(target._name.split("_")[1]) + 1;
      var curPos1 = target.convertToWorldSpaceAR(cc.v2(0, 0));

      var curPos2 = _this.PokerInstanceBackground.node.convertToNodeSpaceAR(curPos1); // cc.log(target);


      target.setPosition(curPos2);
      target.PreviousParent = target.parent;
      target.parent = _this.PokerInstanceBackground.node;
      target.CurrentPosition = curPos1;

      _this.fapai(base_count);
    }.bind(currentPoker));
    var mto = cc.moveTo(0.05, cc.v2(-size.width / 2 + 20 + 72 + 2.2 * seq, -size.height / 2 + 95 + 160));
    var d1 = cc.delayTime(0.01);
    var seque = cc.sequence([d1, mto, end_func]);
    currentPoker.runAction(seque);
  },
  fanzhuan: function fanzhuan(pokernode) {
    var size = cc.view.getVisibleSize();

    var _this = this; // 先反转90变正面数据，再反转-90回来，结束，整个过程移动牌面到指定位置


    var d1 = cc.delayTime(0.01); // var mto = cc.moveTo(0.3, cc.v2(0 + 69,(-size.height / 2) + 95 + 160));

    var pos1 = pokernode.convertToWorldSpaceAR(cc.v2(0, 0));

    var pos2 = _this.CurrentPoker.node.convertToWorldSpaceAR(cc.v2(0, 0));

    var mto = cc.moveBy(0.15, cc.v2(pos2.x - pos1.x + 66, pos2.y - pos1.y));
    var fan1 = cc.scaleTo(0.15, 0.2, 1);
    var changeFront = cc.callFunc(function (target) {
      target.getChildByName("FrontView").active = true;
      target.getChildByName("Background").active = false;
    });
    var spawn = cc.spawn([mto, fan1]);
    pokernode.runAction(spawn);
    var d2 = cc.delayTime(0.15);
    var fan2 = cc.scaleTo(0.1, 1, 1);
    var animationFinished = cc.callFunc(function (target) {
      target.CurrentPosition = target.getPosition();
      var curPos1 = target.convertToWorldSpaceAR(cc.v2(0, 0));

      var curPos2 = _this.CurrentPoker.node.convertToNodeSpaceAR(curPos1); // cc.log(target);


      target.setPosition(curPos2);
      target.PreviousParent = target.parent;
      target.parent = _this.CurrentPoker.node; // cc.log(target.CurrentPosition);

      target.PreviousPosition = target.CurrentPosition;
      target.CurrentPosition = curPos1;
    });
    var sequ = cc.sequence([d2, changeFront, fan2, animationFinished]);
    pokernode.runAction(sequ); // var d3 = cc.delayTime(1.3);
    // var destroyPokerNode = cc.callFunc(function(target) {
    //     target.removeFromParent(true);
    //     target.destroy();
    // });
    // var sequ2 = cc.sequence([d3,destroyPokerNode]);
    // pokernode.runAction(sequ2);
  },
  pokerRandom: function pokerRandom() {
    var array = new Array();

    do {
      var num = this.randomNum(1, 53);

      if (array.indexOf(num) === -1) {
        array.push(num);
      } else {
        var index = array.indexOf(num);
      }
    } while (array.length < 52);

    return array;
  },
  //生成从minNum到maxNum的随机数
  randomNum: function randomNum(minNum, maxNum) {
    var num = Math.floor(Math.random() * (minNum - maxNum) + maxNum);
    return num;
  },
  StashClick: function StashClick(staBut) {
    var _this = this;

    var mainJS = cc.find('Canvas').getComponent('GameSceneScript');
    var pokerNode = mainJS.CurrentPoker.node;
    var BackgroundView = staBut.currentTarget.getChildByName('Background');

    if (BackgroundView.childrenCount > 0) {
      if (pokerNode.childrenCount > 0) {
        cc.log("中间节点被占了,需要先执行中间卡牌动画");
      } else {} // 执行回转动画


      var poker = BackgroundView.children[0]; // 先切换挂载的节点
      // var curPos1 = poker.convertToWorldSpaceAR(cc.v2(0,0));
      // var curPos3 = pokerNode.convertToWorldSpaceAR(cc.v2(0,0));
      // poker.setPosition(cc.v2(curPos1.x - curPos3.x,curPos1.y - curPos3.y));
      // poker.parent = pokerNode;
      // var pos1 = poker.convertToWorldSpaceAR(cc.v2(0,0));
      // var pos2 = pokerNode.convertToWorldSpaceAR(cc.v2(0,0));
      // var mto = cc.moveBy(0.3, cc.v2(pos2.x - pos1.x + 65,pos2.y - pos1.y));
      // var totation = cc.rotateTo(0.3,0);
      // var spawn = cc.spawn([mto,totation]);
      // poker.runAction(spawn);

      var pos1 = poker.convertToWorldSpaceAR(cc.v2(0, 0));
      var pos3 = pokerNode.convertToWorldSpaceAR(cc.v2(0, 0));
      var pos2 = pokerNode.convertToNodeSpaceAR(pos1);
      poker.setPosition(pos2);
      var mto = cc.moveBy(0.15, cc.v2(pos3.x - pos1.x + 65, pos3.y - pos1.y));
      var totation = cc.rotateTo(0.15, 0);
      var spawn = cc.spawn([mto, totation]);
      poker.runAction(spawn);
      poker.PreviousParent = poker.parent;
      poker.parent = pokerNode;
      poker.CurrentPosition = poker.PreviousPosition;
      poker.PreviousPosition = cc.v2(0, 0); // 执行牌局回退
    } else {
      if (_this.CurrentPoker.node.childrenCount > 0) {
        cc.log("我有孩子节点"); // 执行旋转动画

        var poker = _this.CurrentPoker.node.children[0]; // 先切换挂载的节点

        var curPos1 = poker.convertToWorldSpaceAR(cc.v2(0, 0));
        var curPos3 = BackgroundView.convertToWorldSpaceAR(cc.v2(0, 0));
        poker.setPosition(cc.v2(curPos1.x - curPos3.x, curPos1.y - curPos3.y));
        poker.PreviousParent = poker.parent;
        poker.parent = BackgroundView;
        var pos1 = poker.convertToWorldSpaceAR(cc.v2(0, 0));
        var pos2 = BackgroundView.convertToWorldSpaceAR(cc.v2(0, 0));
        var mto = cc.moveBy(0.15, cc.v2(pos2.x - pos1.x, pos2.y - pos1.y));
        var totation = cc.rotateTo(0.15, 17);
        var spawn = cc.spawn([mto, totation]);
        poker.runAction(spawn);
        poker.getComponent(cc.Button).interactable = false;
        poker.interactable = false;
        var pos3 = poker.convertToWorldSpaceAR(cc.v2(0, 0));
        poker.PreviousPosition = poker.CurrentPosition;
        poker.CurrentPosition = pos3; // 执行牌局跟进

        var mainJS = cc.find('Canvas').getComponent('GameSceneScript');
        cc.log(mainJS.PokerInstanceBackground.node.children);
        var frontPoker = mainJS.PokerInstanceBackground.node.children[mainJS.PokerInstanceBackground.node.childrenCount - 1];
        cc.log(frontPoker);
        mainJS.fanzhuan(frontPoker);
      }
    }
  },
  stashAnimation: function stashAnimation(staBut) {
    if (condition) {}
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/PokerPrefabScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b44b7NMjvhMooF1IpLYSEdL', 'PokerPrefabScript');
// Script/PokerPrefabScript.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
cc.Class({
  "extends": cc.Component,
  properties: {
    BackgroundImage: {
      type: cc.Sprite,
      "default": null
    },
    FrontImage: {
      type: cc.Sprite,
      "default": null
    },
    NumView: {
      type: cc.Sprite,
      "default": null
    },
    DecorsSmallView: {
      type: cc.Sprite,
      "default": null
    },
    DecorsBigView: {
      type: cc.Sprite,
      "default": null
    },
    PreviousPosition: {
      type: cc.Vec2,
      "default": cc.v2(0, 0)
    },
    CurrentPosition: {
      type: cc.Vec2,
      "default": cc.v2(0, 0) // get () {
      //     this._CurrentPosition;
      // },
      // set (value) {
      //     this._CurrentPosition = value;
      // }

    },
    PreviousParent: {
      type: cc.Node,
      "default": null
    },
    PokerNumber: {
      type: cc.integer,
      "default": 0 // get () {
      //     cc.log("InitPokerGet");
      //     return this._PokerNumber;
      // },
      // set (value) {
      //     cc.log("InitPokerSet");
      //     this._PokerNumber = value;
      // }

    },
    PokerRealNumber: {
      type: cc.integer,
      "default": 0
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {},
  start: function start() {
    this.InitPoker(this.node.PokerNumber);
  },
  onClick: function onClick() {
    // this.fanzhuan(this.node);
    // cc.log(cc.find('Canvas'));
    var mainJS = cc.find('Canvas').getComponent('GameSceneScript');
    var currentNode = cc.find('Canvas').getChildByName('CurrentPoker');
    var pokerInitBg = cc.find('Canvas').getChildByName('PokerInstanceBackground'); // cc.log(cc.find('Canvas').getChildByName('CurrentPoker'));
    // cc.log(cc.find('Canvas').getChildByName('PokerInstanceBackground'));
    // cc.log(mainJS.CurrentPoker);
    // cc.log(mainJS.CurrentPoker.node);

    if (this.node.parent === mainJS.CurrentPoker.node) {
      cc.log('GGGGGGGG');
    } else if (this.node.parent === mainJS.PokerInstanceBackground.node) {
      // 判断中间存放牌的位置，是否已被占用
      if (mainJS.CurrentPoker.node.childrenCount >= 1) {
        cc.log('FFFF');
      } else {
        mainJS.fanzhuan(this.node);
      }
    }

    cc.log(this.node.parent);
  },
  fanzhuan: function fanzhuan(pokernode) {
    var size = cc.view.getVisibleSize(); // 先反转90变正面数据，再反转-90回来，结束，整个过程移动牌面到指定位置

    var d1 = cc.delayTime(0.01);
    var mto = cc.moveTo(0.3, cc.v2(69, -size.height / 2 + 95 + 160));
    var fan1 = cc.scaleTo(0.3, 0.2, 1); // var fan1 = cc.flipX(true);

    var changeFront = cc.callFunc(function (target) {
      target.getChildByName("FrontView").active = true;
      target.getChildByName("Background").active = false; // target.convertToWorldSpaceAR(cc.v2(0,0))
    });
    var spawn = cc.spawn([mto, fan1]);
    pokernode.runAction(spawn);
    var d2 = cc.delayTime(0.3);
    var fan2 = cc.scaleTo(0.1, 1, 1);
    var sequ = cc.sequence([d2, changeFront, fan2]);
    pokernode.runAction(sequ);
  },
  InitPoker: function InitPoker(dianshu) {
    var _this = this;

    var num = dianshu % 13;

    if (num === 0) {
      num = 13;
    }

    if (num >= 10) {
      _this.node.PokerRealNumber = 10;
    } else {
      _this.node.PokerRealNumber = num;
    }

    var decors = parseInt(dianshu / 13);
    var decorsString = '';

    switch (decors) {
      case 0:
        cc.loader.loadRes('poker', cc.SpriteAtlas, function (err, atlas) {
          if (err) {
            cc.log(err);
            return;
          }

          _this.NumView.spriteFrame = atlas.getSpriteFrame('solitaire_0_' + num);
          _this.DecorsSmallView.spriteFrame = atlas.getSpriteFrame('solitaire_small_2');
          _this.DecorsBigView.spriteFrame = atlas.getSpriteFrame('solitaire_big_2');
        });
        decorsString = "红桃";
        break;

      case 1:
        cc.loader.loadRes('poker', cc.SpriteAtlas, function (err, atlas) {
          if (err) {
            cc.log(err);
            return;
          }

          _this.NumView.spriteFrame = atlas.getSpriteFrame('solitaire_0_' + num);
          _this.DecorsSmallView.spriteFrame = atlas.getSpriteFrame('solitaire_small_0');
          _this.DecorsBigView.spriteFrame = atlas.getSpriteFrame('solitaire_big_0');
        });
        decorsString = "方片";
        break;

      case 2:
        cc.loader.loadRes('poker', cc.SpriteAtlas, function (err, atlas) {
          if (err) {
            cc.log(err);
            return;
          }

          _this.NumView.spriteFrame = atlas.getSpriteFrame('solitaire_1_' + num);
          _this.DecorsSmallView.spriteFrame = atlas.getSpriteFrame('solitaire_small_3');
          _this.DecorsBigView.spriteFrame = atlas.getSpriteFrame('solitaire_big_3');
        });
        decorsString = "黑桃";
        break;

      case 3:
        cc.loader.loadRes('poker', cc.SpriteAtlas, function (err, atlas) {
          if (err) {
            cc.log(err);
            return;
          }

          _this.NumView.spriteFrame = atlas.getSpriteFrame('solitaire_1_' + num);
          _this.DecorsSmallView.spriteFrame = atlas.getSpriteFrame('solitaire_small_1');
          _this.DecorsBigView.spriteFrame = atlas.getSpriteFrame('solitaire_big_1');
        });
        decorsString = "草花";
        break;

      default:
        break;
    } // cc.log("点数:"+num+"   "+"花色:"+decorsString);

  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/LoadViewScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '768d1wREINLi4rhRLubZess', 'LoadViewScript');
// Script/LoadViewScript.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
cc.Class({
  "extends": cc.Component,
  properties: {// foo: {
    //     // ATTRIBUTES:
    //     default: null,        // The default value will be used only when the component attaching
    //                           // to a node for the first time
    //     type: cc.SpriteFrame, // optional, default is typeof default
    //     serializable: true,   // optional, default is true
    // },
    // bar: {
    //     get () {
    //         return this._bar;
    //     },
    //     set (value) {
    //         this._bar = value;
    //     }
    // },
  },
  // LIFE-CYCLE CALLBACKS:
  // onLoad () {},
  start: function start() {
    cc.director.loadScene("GameScene", null);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvTG9hZFZpZXdTY3JpcHQuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJzdGFydCIsImRpcmVjdG9yIiwibG9hZFNjZW5lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUUsQ0FDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFmUSxHQUhQO0FBcUJMO0FBRUE7QUFFQUMsRUFBQUEsS0F6QkssbUJBeUJJO0FBRUxKLElBQUFBLEVBQUUsQ0FBQ0ssUUFBSCxDQUFZQyxTQUFaLENBQXNCLFdBQXRCLEVBQWtDLElBQWxDO0FBRUgsR0E3QkksQ0ErQkw7O0FBL0JLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIGNjLkNsYXNzOlxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvY2xhc3MuaHRtbFxuLy8gTGVhcm4gQXR0cmlidXRlOlxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XG4vLyAgLSBodHRwczovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXG5cbmNjLkNsYXNzKHtcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXG5cbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIC8vIGZvbzoge1xuICAgICAgICAvLyAgICAgLy8gQVRUUklCVVRFUzpcbiAgICAgICAgLy8gICAgIGRlZmF1bHQ6IG51bGwsICAgICAgICAvLyBUaGUgZGVmYXVsdCB2YWx1ZSB3aWxsIGJlIHVzZWQgb25seSB3aGVuIHRoZSBjb21wb25lbnQgYXR0YWNoaW5nXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdG8gYSBub2RlIGZvciB0aGUgZmlyc3QgdGltZVxuICAgICAgICAvLyAgICAgdHlwZTogY2MuU3ByaXRlRnJhbWUsIC8vIG9wdGlvbmFsLCBkZWZhdWx0IGlzIHR5cGVvZiBkZWZhdWx0XG4gICAgICAgIC8vICAgICBzZXJpYWxpemFibGU6IHRydWUsICAgLy8gb3B0aW9uYWwsIGRlZmF1bHQgaXMgdHJ1ZVxuICAgICAgICAvLyB9LFxuICAgICAgICAvLyBiYXI6IHtcbiAgICAgICAgLy8gICAgIGdldCAoKSB7XG4gICAgICAgIC8vICAgICAgICAgcmV0dXJuIHRoaXMuX2JhcjtcbiAgICAgICAgLy8gICAgIH0sXG4gICAgICAgIC8vICAgICBzZXQgKHZhbHVlKSB7XG4gICAgICAgIC8vICAgICAgICAgdGhpcy5fYmFyID0gdmFsdWU7XG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vIH0sXG4gICAgfSxcblxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxuXG4gICAgLy8gb25Mb2FkICgpIHt9LFxuXG4gICAgc3RhcnQgKCkge1xuXG4gICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZShcIkdhbWVTY2VuZVwiLG51bGwpO1xuXG4gICAgfSxcblxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxufSk7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/ToolsScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6fa68oKItVDQqOzUi2wdDpY', 'ToolsScript');
// Script/ToolsScript.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
cc.Class({
  "extends": cc.Component,
  properties: {},
  // LIFE-CYCLE CALLBACKS:
  // onLoad () {},
  start: function start() {},
  FormatMMSS: function FormatMMSS(seconds) {
    var currentSeconds = parseInt(seconds);
    var timeStr = null;
    var minute = 0;
    var second = 0;
    if (currentSeconds <= 0) return "00:00";else {
      minute = parseInt(currentSeconds / 60);

      if (minute < 60) {
        second = currentSeconds % 60;
        timeStr = minute + ":" + (second < 10 ? "0" + second : second);
      } else {
        hour = minute / 60;
        minute = minute % 60;
        second = currentSeconds - hour * 3600 - minute * 60;
        timeStr = hour + ":" + minute + ":" + (second < 10 ? "0" + second : second);
      }
    }
    return timeStr;
  },
  ScaleAnimation: function ScaleAnimation(node) {
    var d1 = cc.delayTime(0.01);
    var sto1 = cc.scaleTo(0.1, 1.5);
    var sto2 = cc.scaleTo(0.1, 1);
    var seque = cc.sequence([d1, sto1, sto2]);
    node.node.runAction(seque);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVG9vbHNTY3JpcHQuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJzdGFydCIsIkZvcm1hdE1NU1MiLCJzZWNvbmRzIiwiY3VycmVudFNlY29uZHMiLCJwYXJzZUludCIsInRpbWVTdHIiLCJtaW51dGUiLCJzZWNvbmQiLCJob3VyIiwiU2NhbGVBbmltYXRpb24iLCJub2RlIiwiZDEiLCJkZWxheVRpbWUiLCJzdG8xIiwic2NhbGVUbyIsInN0bzIiLCJzZXF1ZSIsInNlcXVlbmNlIiwicnVuQWN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBQSxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUUsRUFIUDtBQU9MO0FBRUE7QUFFQUMsRUFBQUEsS0FYSyxtQkFXSSxDQUVSLENBYkk7QUFlTEMsRUFBQUEsVUFBVSxFQUFDLG9CQUFVQyxPQUFWLEVBQW1CO0FBRTFCLFFBQUlDLGNBQWMsR0FBR0MsUUFBUSxDQUFDRixPQUFELENBQTdCO0FBQ0EsUUFBSUcsT0FBTyxHQUFHLElBQWQ7QUFDQSxRQUFJQyxNQUFNLEdBQUcsQ0FBYjtBQUNBLFFBQUlDLE1BQU0sR0FBRyxDQUFiO0FBQ0EsUUFBSUosY0FBYyxJQUFJLENBQXRCLEVBQ0ksT0FBTyxPQUFQLENBREosS0FFSztBQUNERyxNQUFBQSxNQUFNLEdBQUdGLFFBQVEsQ0FBQ0QsY0FBYyxHQUFHLEVBQWxCLENBQWpCOztBQUNBLFVBQUlHLE1BQU0sR0FBRyxFQUFiLEVBQWlCO0FBQ2JDLFFBQUFBLE1BQU0sR0FBR0osY0FBYyxHQUFHLEVBQTFCO0FBQ0FFLFFBQUFBLE9BQU8sR0FBR0MsTUFBTSxHQUFHLEdBQVQsSUFBZ0JDLE1BQU0sR0FBRyxFQUFULEdBQWMsTUFBSUEsTUFBbEIsR0FBMkJBLE1BQTNDLENBQVY7QUFDSCxPQUhELE1BR087QUFDSEMsUUFBQUEsSUFBSSxHQUFHRixNQUFNLEdBQUcsRUFBaEI7QUFDQUEsUUFBQUEsTUFBTSxHQUFHQSxNQUFNLEdBQUcsRUFBbEI7QUFDQUMsUUFBQUEsTUFBTSxHQUFHSixjQUFjLEdBQUdLLElBQUksR0FBRyxJQUF4QixHQUErQkYsTUFBTSxHQUFHLEVBQWpEO0FBQ0FELFFBQUFBLE9BQU8sR0FBR0csSUFBSSxHQUFHLEdBQVAsR0FBYUYsTUFBYixHQUFzQixHQUF0QixJQUE2QkMsTUFBTSxHQUFHLEVBQVQsR0FBYyxNQUFJQSxNQUFsQixHQUEyQkEsTUFBeEQsQ0FBVjtBQUNIO0FBQ0o7QUFDRCxXQUFPRixPQUFQO0FBQ0gsR0FwQ0k7QUFzQ0xJLEVBQUFBLGNBQWMsRUFBQyx3QkFBVUMsSUFBVixFQUFnQjtBQUUzQixRQUFJQyxFQUFFLEdBQUdmLEVBQUUsQ0FBQ2dCLFNBQUgsQ0FBYSxJQUFiLENBQVQ7QUFDQSxRQUFJQyxJQUFJLEdBQUdqQixFQUFFLENBQUNrQixPQUFILENBQVcsR0FBWCxFQUFnQixHQUFoQixDQUFYO0FBQ0EsUUFBSUMsSUFBSSxHQUFHbkIsRUFBRSxDQUFDa0IsT0FBSCxDQUFXLEdBQVgsRUFBZ0IsQ0FBaEIsQ0FBWDtBQUNBLFFBQUlFLEtBQUssR0FBR3BCLEVBQUUsQ0FBQ3FCLFFBQUgsQ0FBWSxDQUFDTixFQUFELEVBQUtFLElBQUwsRUFBVUUsSUFBVixDQUFaLENBQVo7QUFDQUwsSUFBQUEsSUFBSSxDQUFDQSxJQUFMLENBQVVRLFNBQVYsQ0FBb0JGLEtBQXBCO0FBQ0gsR0E3Q0ksQ0ErQ0w7O0FBL0NLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIGNjLkNsYXNzOlxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvY2xhc3MuaHRtbFxuLy8gTGVhcm4gQXR0cmlidXRlOlxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XG4vLyAgLSBodHRwczovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXG5cbmNjLkNsYXNzKHtcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXG5cbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIFxuICAgIH0sXG5cbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcblxuICAgIC8vIG9uTG9hZCAoKSB7fSxcblxuICAgIHN0YXJ0ICgpIHtcblxuICAgIH0sXG5cbiAgICBGb3JtYXRNTVNTOmZ1bmN0aW9uIChzZWNvbmRzKSB7XG5cbiAgICAgICAgdmFyIGN1cnJlbnRTZWNvbmRzID0gcGFyc2VJbnQoc2Vjb25kcyk7XG4gICAgICAgIHZhciB0aW1lU3RyID0gbnVsbDtcbiAgICAgICAgdmFyIG1pbnV0ZSA9IDA7XG4gICAgICAgIHZhciBzZWNvbmQgPSAwO1xuICAgICAgICBpZiAoY3VycmVudFNlY29uZHMgPD0gMClcbiAgICAgICAgICAgIHJldHVybiBcIjAwOjAwXCI7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbWludXRlID0gcGFyc2VJbnQoY3VycmVudFNlY29uZHMgLyA2MCk7XG4gICAgICAgICAgICBpZiAobWludXRlIDwgNjApIHtcbiAgICAgICAgICAgICAgICBzZWNvbmQgPSBjdXJyZW50U2Vjb25kcyAlIDYwO1xuICAgICAgICAgICAgICAgIHRpbWVTdHIgPSBtaW51dGUgKyBcIjpcIiArIChzZWNvbmQgPCAxMCA/IFwiMFwiK3NlY29uZCA6IHNlY29uZCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGhvdXIgPSBtaW51dGUgLyA2MDtcbiAgICAgICAgICAgICAgICBtaW51dGUgPSBtaW51dGUgJSA2MDtcbiAgICAgICAgICAgICAgICBzZWNvbmQgPSBjdXJyZW50U2Vjb25kcyAtIGhvdXIgKiAzNjAwIC0gbWludXRlICogNjA7XG4gICAgICAgICAgICAgICAgdGltZVN0ciA9IGhvdXIgKyBcIjpcIiArIG1pbnV0ZSArIFwiOlwiICsgKHNlY29uZCA8IDEwID8gXCIwXCIrc2Vjb25kIDogc2Vjb25kKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGltZVN0cjtcbiAgICB9LFxuXG4gICAgU2NhbGVBbmltYXRpb246ZnVuY3Rpb24gKG5vZGUpIHtcblxuICAgICAgICB2YXIgZDEgPSBjYy5kZWxheVRpbWUoMC4wMSk7XG4gICAgICAgIHZhciBzdG8xID0gY2Muc2NhbGVUbygwLjEsIDEuNSk7XG4gICAgICAgIHZhciBzdG8yID0gY2Muc2NhbGVUbygwLjEsIDEpO1xuICAgICAgICB2YXIgc2VxdWUgPSBjYy5zZXF1ZW5jZShbZDEsIHN0bzEsc3RvMl0pO1xuICAgICAgICBub2RlLm5vZGUucnVuQWN0aW9uKHNlcXVlKTtcbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcbn0pO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/ContainerPrefabScript.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9b74fbmycVLz731IpvOhsMr', 'ContainerPrefabScript');
// Script/ContainerPrefabScript.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
cc.Class({
  "extends": cc.Component,
  properties: {
    ScoreRect: {
      type: cc.Sprite,
      "default": null
    },
    ScoreLabel: {
      type: cc.Label,
      "default": null
    },
    UpTip: {
      type: cc.Sprite,
      "default": null
    } // foo: {
    //     // ATTRIBUTES:
    //     default: null,        // The default value will be used only when the component attaching
    //                           // to a node for the first time
    //     type: cc.SpriteFrame, // optional, default is typeof default
    //     serializable: true,   // optional, default is true
    // },
    // bar: {
    //     get () {
    //         return this._bar;
    //     },
    //     set (value) {
    //         this._bar = value;
    //     }
    // },

  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.ScoreLabel.string = '0';
  },
  start: function start() {},
  onClick: function onClick(target) {
    var _this = this;

    var mainJS = cc.find('Canvas').getComponent('GameSceneScript');
    var pokerNode = mainJS.CurrentPoker.node;
    var poker;

    if (pokerNode.childrenCount > 0) {
      poker = pokerNode.children[pokerNode.childrenCount - 1]; // _this.feipai(target.target,poker);

      _this.feipai(target.currentTarget, poker);

      cc.log("RealNumber:" + poker.PokerRealNumber);
      var sum = parseInt(this.ScoreLabel.string) + poker.PokerRealNumber;

      if (sum === 21) {} else if (sum > 21) {}

      var Tools = cc.find('Canvas').getComponent('ToolsScript');
      Tools.ScaleAnimation(_this.ScoreLabel); // cc.log("最终分"+sum);

      _this.ScoreLabel.string = sum.toString(); // 执行牌局跟进

      cc.log(mainJS.PokerInstanceBackground.node.children);
      var frontPoker = mainJS.PokerInstanceBackground.node.children[mainJS.PokerInstanceBackground.node.childrenCount - 1];
      cc.log(frontPoker);
      mainJS.fanzhuan(frontPoker);
    } // if (mainJS.CurrentPoker.node) {
    // }
    // var curPos1 = target.convertToWorldSpaceAR(cc.v2(0,0));
    //     var curPos2 = _this.PokerInstanceBackground.node.convertToNodeSpaceAR(curPos1);
    //     cc.log(target);
    //     target.setPosition(curPos2);
    //     target.parent = _this.PokerInstanceBackground.node;
    //     target.CurrentPosition = curPos1;

  },
  // 动画从子节点飞到父节点身上
  feipai: function feipai(nodeParent, nodeSon) {
    cc.log(nodeParent, nodeSon);
    var curPos1 = nodeSon.convertToWorldSpaceAR(cc.v2(0, 0));
    var curPos2 = nodeParent.convertToWorldSpaceAR(cc.v2(0, 0));

    var _this = this;

    var d2 = cc.delayTime(0.01);
    var mvto = cc.moveBy(0.2, cc.v2(curPos2.x - curPos1.x, curPos2.y - curPos1.y + 175 - 45 * nodeParent.childrenCount));
    var animationFinished = cc.callFunc(function (target) {
      // target.CurrentPosition = target.getPosition();
      // var curPos1 = target.convertToWorldSpaceAR(cc.v2(0,0));
      // var curPos2 = _this.CurrentPoker.node.convertToNodeSpaceAR(curPos1);
      // cc.log(target);
      // target.setPosition(curPos2);
      // target.parent = _this.CurrentPoker.node;
      // // cc.log(target.CurrentPosition);
      // target.PreviousPosition = target.CurrentPosition;
      // target.CurrentPosition = curPos1;
      var pos1 = target.convertToWorldSpaceAR(cc.v2(0, 0));
      var pos2 = nodeParent.convertToNodeSpaceAR(pos1);
      target.setPosition(pos2);
      target.PreviousParent = target.parent;
      target.parent = nodeParent;
      target.PreviousPosition = target.CurrentPosition;
      target.CurrentPosition = pos1;
      cc.log(nodeParent.children);
      target.getComponent(cc.Button).interactable = false; // target.interactable = false;
    });
    var sequ = cc.sequence([d2, mvto, animationFinished]);
    nodeSon.runAction(sequ);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29udGFpbmVyUHJlZmFiU2NyaXB0LmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiU2NvcmVSZWN0IiwidHlwZSIsIlNwcml0ZSIsIlNjb3JlTGFiZWwiLCJMYWJlbCIsIlVwVGlwIiwib25Mb2FkIiwic3RyaW5nIiwic3RhcnQiLCJvbkNsaWNrIiwidGFyZ2V0IiwiX3RoaXMiLCJtYWluSlMiLCJmaW5kIiwiZ2V0Q29tcG9uZW50IiwicG9rZXJOb2RlIiwiQ3VycmVudFBva2VyIiwibm9kZSIsInBva2VyIiwiY2hpbGRyZW5Db3VudCIsImNoaWxkcmVuIiwiZmVpcGFpIiwiY3VycmVudFRhcmdldCIsImxvZyIsIlBva2VyUmVhbE51bWJlciIsInN1bSIsInBhcnNlSW50IiwiVG9vbHMiLCJTY2FsZUFuaW1hdGlvbiIsInRvU3RyaW5nIiwiUG9rZXJJbnN0YW5jZUJhY2tncm91bmQiLCJmcm9udFBva2VyIiwiZmFuemh1YW4iLCJub2RlUGFyZW50Iiwibm9kZVNvbiIsImN1clBvczEiLCJjb252ZXJ0VG9Xb3JsZFNwYWNlQVIiLCJ2MiIsImN1clBvczIiLCJkMiIsImRlbGF5VGltZSIsIm12dG8iLCJtb3ZlQnkiLCJ4IiwieSIsImFuaW1hdGlvbkZpbmlzaGVkIiwiY2FsbEZ1bmMiLCJwb3MxIiwicG9zMiIsImNvbnZlcnRUb05vZGVTcGFjZUFSIiwic2V0UG9zaXRpb24iLCJQcmV2aW91c1BhcmVudCIsInBhcmVudCIsIlByZXZpb3VzUG9zaXRpb24iLCJDdXJyZW50UG9zaXRpb24iLCJCdXR0b24iLCJpbnRlcmFjdGFibGUiLCJzZXF1Iiwic2VxdWVuY2UiLCJydW5BY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ0wsYUFBU0QsRUFBRSxDQUFDRSxTQURQ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QUFBQSxNQUFNLENBQUMwQyxNQUFQLEdBQWdCbkIsVUFBaEI7QUFDQXZCLE1BQUFBLE1BQU0sQ0FBQzJDLGdCQUFQLEdBQTBCM0MsTUFBTSxDQUFDNEMsZUFBakM7QUFDQTVDLE1BQUFBLE1BQU0sQ0FBQzRDLGVBQVAsR0FBeUJQLElBQXpCO0FBQ0FuRCxNQUFBQSxFQUFFLENBQUMyQixHQUFILENBQU9VLFVBQVUsQ0FBQ2IsUUFBbEI7QUFDQVYsTUFBQUEsTUFBTSxDQUFDSSxZQUFQLENBQW9CbEIsRUFBRSxDQUFDMkQsTUFBdkIsRUFBK0JDLFlBQS9CLEdBQThDLEtBQTlDLENBbkJpRCxDQW9CakQ7QUFFSCxLQXRCdUIsQ0FBeEI7QUF1QkEsUUFBSUMsSUFBSSxHQUFHN0QsRUFBRSxDQUFDOEQsUUFBSCxDQUFZLENBQUNuQixFQUFELEVBQUlFLElBQUosRUFBU0ksaUJBQVQsQ0FBWixDQUFYO0FBQ0FYLElBQUFBLE9BQU8sQ0FBQ3lCLFNBQVIsQ0FBa0JGLElBQWxCO0FBQ0gsR0FySEksQ0F1SEw7O0FBdkhLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIGNjLkNsYXNzOlxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvY2xhc3MuaHRtbFxuLy8gTGVhcm4gQXR0cmlidXRlOlxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XG4vLyAgLSBodHRwczovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXG5cbmNjLkNsYXNzKHtcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXG5cbiAgICBwcm9wZXJ0aWVzOiB7XG5cbiAgICAgICAgU2NvcmVSZWN0OiB7XG4gICAgICAgICAgICB0eXBlOmNjLlNwcml0ZSxcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbFxuICAgICAgICB9LFxuICAgICAgICBTY29yZUxhYmVsOiB7XG4gICAgICAgICAgICB0eXBlOmNjLkxhYmVsLFxuICAgICAgICAgICAgZGVmYXVsdDpudWxsXG4gICAgICAgIH0sXG4gICAgICAgIFVwVGlwOiB7XG4gICAgICAgICAgICB0eXBlOmNjLlNwcml0ZSxcbiAgICAgICAgICAgIGRlZmF1bHQ6bnVsbFxuICAgICAgICB9XG4gICAgICAgIC8vIGZvbzoge1xuICAgICAgICAvLyAgICAgLy8gQVRUUklCVVRFUzpcbiAgICAgICAgLy8gICAgIGRlZmF1bHQ6IG51bGwsICAgICAgICAvLyBUaGUgZGVmYXVsdCB2YWx1ZSB3aWxsIGJlIHVzZWQgb25seSB3aGVuIHRoZSBjb21wb25lbnQgYXR0YWNoaW5nXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdG8gYSBub2RlIGZvciB0aGUgZmlyc3QgdGltZVxuICAgICAgICAvLyAgICAgdHlwZTogY2MuU3ByaXRlRnJhbWUsIC8vIG9wdGlvbmFsLCBkZWZhdWx0IGlzIHR5cGVvZiBkZWZhdWx0XG4gICAgICAgIC8vICAgICBzZXJpYWxpemFibGU6IHRydWUsICAgLy8gb3B0aW9uYWwsIGRlZmF1bHQgaXMgdHJ1ZVxuICAgICAgICAvLyB9LFxuICAgICAgICAvLyBiYXI6IHtcbiAgICAgICAgLy8gICAgIGdldCAoKSB7XG4gICAgICAgIC8vICAgICAgICAgcmV0dXJuIHRoaXMuX2JhcjtcbiAgICAgICAgLy8gICAgIH0sXG4gICAgICAgIC8vICAgICBzZXQgKHZhbHVlKSB7XG4gICAgICAgIC8vICAgICAgICAgdGhpcy5fYmFyID0gdmFsdWU7XG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vIH0sXG4gICAgfSxcblxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxuXG4gICAgb25Mb2FkICgpIHtcbiAgICAgICAgdGhpcy5TY29yZUxhYmVsLnN0cmluZyA9ICcwJztcbiAgICB9LFxuXG4gICAgc3RhcnQgKCkge1xuXG4gICAgfSxcblxuICAgIG9uQ2xpY2s6ZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBtYWluSlMgPSBjYy5maW5kKCdDYW52YXMnKS5nZXRDb21wb25lbnQoJ0dhbWVTY2VuZVNjcmlwdCcpO1xuICAgICAgICB2YXIgcG9rZXJOb2RlID0gbWFpbkpTLkN1cnJlbnRQb2tlci5ub2RlO1xuXG4gICAgICAgIHZhciBwb2tlcjtcbiAgICAgICAgaWYgKHBva2VyTm9kZS5jaGlsZHJlbkNvdW50ID4gMCkge1xuICAgICAgICAgICAgcG9rZXIgPSBwb2tlck5vZGUuY2hpbGRyZW5bcG9rZXJOb2RlLmNoaWxkcmVuQ291bnQgLSAxXTtcbiAgICAgICAgICAgIC8vIF90aGlzLmZlaXBhaSh0YXJnZXQudGFyZ2V0LHBva2VyKTtcbiAgICAgICAgICAgIF90aGlzLmZlaXBhaSh0YXJnZXQuY3VycmVudFRhcmdldCxwb2tlcik7XG4gICAgICAgICAgICBjYy5sb2coXCJSZWFsTnVtYmVyOlwiICsgcG9rZXIuUG9rZXJSZWFsTnVtYmVyKTtcbiAgICAgICAgICAgIHZhciBzdW0gPSBwYXJzZUludCh0aGlzLlNjb3JlTGFiZWwuc3RyaW5nKSArIHBva2VyLlBva2VyUmVhbE51bWJlcjtcbiAgICAgICAgICAgIGlmIChzdW0gPT09IDIxKSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHN1bSA+IDIxKSB7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBUb29scyA9IGNjLmZpbmQoJ0NhbnZhcycpLmdldENvbXBvbmVudCgnVG9vbHNTY3JpcHQnKTtcbiAgICAgICAgICAgIFRvb2xzLlNjYWxlQW5pbWF0aW9uKF90aGlzLlNjb3JlTGFiZWwpO1xuICAgICAgICAgICAgLy8gY2MubG9nKFwi5pyA57uI5YiGXCIrc3VtKTtcbiAgICAgICAgICAgIF90aGlzLlNjb3JlTGFiZWwuc3RyaW5nID0gc3VtLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAvLyDmiafooYzniYzlsYDot5/ov5tcbiAgICAgICAgICAgIGNjLmxvZyhtYWluSlMuUG9rZXJJbnN0YW5jZUJhY2tncm91bmQubm9kZS5jaGlsZHJlbik7XG4gICAgICAgICAgICB2YXIgZnJvbnRQb2tlciA9IG1haW5KUy5Qb2tlckluc3RhbmNlQmFja2dyb3VuZC5ub2RlLmNoaWxkcmVuW21haW5KUy5Qb2tlckluc3RhbmNlQmFja2dyb3VuZC5ub2RlLmNoaWxkcmVuQ291bnQgLSAxXTtcbiAgICAgICAgICAgIGNjLmxvZyhmcm9udFBva2VyKTtcbiAgICAgICAgICAgIG1haW5KUy5mYW56aHVhbihmcm9udFBva2VyKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gaWYgKG1haW5KUy5DdXJyZW50UG9rZXIubm9kZSkge1xuICAgICAgICAgICAgXG4gICAgICAgIC8vIH1cbiAgICAgICAgXG4gICAgICAgIC8vIHZhciBjdXJQb3MxID0gdGFyZ2V0LmNvbnZlcnRUb1dvcmxkU3BhY2VBUihjYy52MigwLDApKTtcbiAgICAgICAgLy8gICAgIHZhciBjdXJQb3MyID0gX3RoaXMuUG9rZXJJbnN0YW5jZUJhY2tncm91bmQubm9kZS5jb252ZXJ0VG9Ob2RlU3BhY2VBUihjdXJQb3MxKTtcbiAgICAgICAgLy8gICAgIGNjLmxvZyh0YXJnZXQpO1xuICAgICAgICAvLyAgICAgdGFyZ2V0LnNldFBvc2l0aW9uKGN1clBvczIpO1xuICAgICAgICAvLyAgICAgdGFyZ2V0LnBhcmVudCA9IF90aGlzLlBva2VySW5zdGFuY2VCYWNrZ3JvdW5kLm5vZGU7XG4gICAgICAgIC8vICAgICB0YXJnZXQuQ3VycmVudFBvc2l0aW9uID0gY3VyUG9zMTtcbiAgICAgICAgXG4gICAgfSxcbiAgICAvLyDliqjnlLvku47lrZDoioLngrnpo57liLDniLboioLngrnouqvkuIpcbiAgICBmZWlwYWk6IGZ1bmN0aW9uIChub2RlUGFyZW50LG5vZGVTb24pIHtcbiAgICAgICAgY2MubG9nKG5vZGVQYXJlbnQsbm9kZVNvbik7XG4gICAgICAgIHZhciBjdXJQb3MxID0gbm9kZVNvbi5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIoY2MudjIoMCwwKSk7XG4gICAgICAgIHZhciBjdXJQb3MyID0gbm9kZVBhcmVudC5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIoY2MudjIoMCwwKSk7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBkMiA9IGNjLmRlbGF5VGltZSgwLjAxKTtcbiAgICAgICAgdmFyIG12dG8gPSBjYy5tb3ZlQnkoMC4yLCBjYy52MihjdXJQb3MyLnggLSBjdXJQb3MxLngsY3VyUG9zMi55IC0gY3VyUG9zMS55ICsgMTc1IC0gKDQ1ICogbm9kZVBhcmVudC5jaGlsZHJlbkNvdW50KSkpO1xuICAgICAgICB2YXIgYW5pbWF0aW9uRmluaXNoZWQgPSBjYy5jYWxsRnVuYyhmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgICAgIC8vIHRhcmdldC5DdXJyZW50UG9zaXRpb24gPSB0YXJnZXQuZ2V0UG9zaXRpb24oKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gdmFyIGN1clBvczEgPSB0YXJnZXQuY29udmVydFRvV29ybGRTcGFjZUFSKGNjLnYyKDAsMCkpO1xuICAgICAgICAgICAgLy8gdmFyIGN1clBvczIgPSBfdGhpcy5DdXJyZW50UG9rZXIubm9kZS5jb252ZXJ0VG9Ob2RlU3BhY2VBUihjdXJQb3MxKTtcbiAgICAgICAgICAgIC8vIGNjLmxvZyh0YXJnZXQpO1xuICAgICAgICAgICAgLy8gdGFyZ2V0LnNldFBvc2l0aW9uKGN1clBvczIpO1xuICAgICAgICAgICAgLy8gdGFyZ2V0LnBhcmVudCA9IF90aGlzLkN1cnJlbnRQb2tlci5ub2RlO1xuICAgICAgICAgICAgLy8gLy8gY2MubG9nKHRhcmdldC5DdXJyZW50UG9zaXRpb24pO1xuICAgICAgICAgICAgLy8gdGFyZ2V0LlByZXZpb3VzUG9zaXRpb24gPSB0YXJnZXQuQ3VycmVudFBvc2l0aW9uO1xuICAgICAgICAgICAgLy8gdGFyZ2V0LkN1cnJlbnRQb3NpdGlvbiA9IGN1clBvczE7XG4gICAgICAgICAgICB2YXIgcG9zMSA9IHRhcmdldC5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIoY2MudjIoMCwwKSk7XG4gICAgICAgICAgICB2YXIgcG9zMiA9IG5vZGVQYXJlbnQuY29udmVydFRvTm9kZVNwYWNlQVIocG9zMSk7XG4gICAgICAgICAgICB0YXJnZXQuc2V0UG9zaXRpb24ocG9zMik7XG4gICAgICAgICAgICB0YXJnZXQuUHJldmlvdXNQYXJlbnQgPSB0YXJnZXQucGFyZW50O1xuICAgICAgICAgICAgdGFyZ2V0LnBhcmVudCA9IG5vZGVQYXJlbnQ7XG4gICAgICAgICAgICB0YXJnZXQuUHJldmlvdXNQb3NpdGlvbiA9IHRhcmdldC5DdXJyZW50UG9zaXRpb247XG4gICAgICAgICAgICB0YXJnZXQuQ3VycmVudFBvc2l0aW9uID0gcG9zMTtcbiAgICAgICAgICAgIGNjLmxvZyhub2RlUGFyZW50LmNoaWxkcmVuKTtcbiAgICAgICAgICAgIHRhcmdldC5nZXRDb21wb25lbnQoY2MuQnV0dG9uKS5pbnRlcmFjdGFibGUgPSBmYWxzZTtcbiAgICAgICAgICAgIC8vIHRhcmdldC5pbnRlcmFjdGFibGUgPSBmYWxzZTtcblxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIHNlcXUgPSBjYy5zZXF1ZW5jZShbZDIsbXZ0byxhbmltYXRpb25GaW5pc2hlZF0pO1xuICAgICAgICBub2RlU29uLnJ1bkFjdGlvbihzZXF1KTtcbiAgICB9XG5cbiAgICAvLyB1cGRhdGUgKGR0KSB7fSxcbn0pO1xuIl19
//------QC-SOURCE-SPLIT------
